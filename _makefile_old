# Compiler and flags
CC = cc
CFLAGS = 

# Source files
SRC = builts_in.c checks.c list.c spliting.c checking.c ft_memmove.c ft_strchr.c \
 libft.c minishell.c moreUtils.c utits.c ft_strjoin.c ft_split.c ft_strlen.c \

# Header files
HEADERS = minishell.h

# Object files
OBJ = $(SRC:.c=.o)

# Executable name
TARGET = minishell

# Default rule to build the target
all: $(TARGET)

# Rule to build the executable
$(TARGET): $(OBJ)
	$(CC) $(CFLAGS) -lreadline -o $(TARGET) $(OBJ)

# Rule to compile source files into object files
%.o: %.c $(HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@

# Clean up object files and the executable
clean:
	rm -f $(OBJ) $(TARGET)

# PHONY targets
.PHONY: all clean
